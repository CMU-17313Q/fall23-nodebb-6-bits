'use strict';function cov_al8p3s2kj(){var path="/Users/fatimajohar/Desktop/fall23-nodebb-6-bits-FJ/src/socket.io/plugins.js";var hash="fa591813f9f9d7ff30232caa7acd355fef8acac5";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/fatimajohar/Desktop/fall23-nodebb-6-bits-FJ/src/socket.io/plugins.js",statementMap:{"0":{start:{line:3,column:22},end:{line:3,column:24}},"1":{start:{line:17,column:0},end:{line:17,column:31}}},fnMap:{},branchMap:{},s:{"0":0,"1":0},f:{},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"fa591813f9f9d7ff30232caa7acd355fef8acac5"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_al8p3s2kj=function(){return actualCoverage;};}return actualCoverage;}cov_al8p3s2kj();const SocketPlugins=(cov_al8p3s2kj().s[0]++,{});/*
    This file is provided exclusively so that plugins can require it and add their own socket listeners.

    How? From your plugin:

        const SocketPlugins = require.main.require('./src/socket.io/plugins');
        SocketPlugins.myPlugin = {};
        SocketPlugins.myPlugin.myMethod = function(socket, data, callback) { ... };

    Be a good lad and namespace your methods.
*/cov_al8p3s2kj().s[1]++;module.exports=SocketPlugins;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfYWw4cDNzMmtqIiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwiYnJhbmNoTWFwIiwicyIsImYiLCJiIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsIlNvY2tldFBsdWdpbnMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsicGx1Z2lucy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IFNvY2tldFBsdWdpbnMgPSB7fTtcblxuLypcbiAgICBUaGlzIGZpbGUgaXMgcHJvdmlkZWQgZXhjbHVzaXZlbHkgc28gdGhhdCBwbHVnaW5zIGNhbiByZXF1aXJlIGl0IGFuZCBhZGQgdGhlaXIgb3duIHNvY2tldCBsaXN0ZW5lcnMuXG5cbiAgICBIb3c/IEZyb20geW91ciBwbHVnaW46XG5cbiAgICAgICAgY29uc3QgU29ja2V0UGx1Z2lucyA9IHJlcXVpcmUubWFpbi5yZXF1aXJlKCcuL3NyYy9zb2NrZXQuaW8vcGx1Z2lucycpO1xuICAgICAgICBTb2NrZXRQbHVnaW5zLm15UGx1Z2luID0ge307XG4gICAgICAgIFNvY2tldFBsdWdpbnMubXlQbHVnaW4ubXlNZXRob2QgPSBmdW5jdGlvbihzb2NrZXQsIGRhdGEsIGNhbGxiYWNrKSB7IC4uLiB9O1xuXG4gICAgQmUgYSBnb29kIGxhZCBhbmQgbmFtZXNwYWNlIHlvdXIgbWV0aG9kcy5cbiovXG5cbm1vZHVsZS5leHBvcnRzID0gU29ja2V0UGx1Z2lucztcbiJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWSxDQUFDLFNBQUFBLGNBQUEsTUFBQUMsSUFBQSxtRkFBQUMsSUFBQSxnREFBQUMsTUFBQSxLQUFBQyxRQUFBLHNCQUFBQyxHQUFBLG9CQUFBQyxZQUFBLEVBQUFMLElBQUEsK0VBQUFNLFlBQUEsT0FBQUMsS0FBQSxFQUFBQyxJQUFBLEdBQUFDLE1BQUEsS0FBQUMsR0FBQSxFQUFBRixJQUFBLEdBQUFDLE1BQUEsV0FBQUYsS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsSUFBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsT0FBQUUsS0FBQSxJQUFBQyxTQUFBLElBQUFDLENBQUEsZUFBQUMsQ0FBQSxJQUFBQyxDQUFBLElBQUFDLGVBQUEsNENBQUFmLElBQUEsaURBQUFnQixRQUFBLENBQUFmLE1BQUEsQ0FBQUUsR0FBQSxJQUFBRixNQUFBLENBQUFFLEdBQUEsVUFBQWEsUUFBQSxDQUFBakIsSUFBQSxHQUFBaUIsUUFBQSxDQUFBakIsSUFBQSxFQUFBQyxJQUFBLEdBQUFBLElBQUEsRUFBQWdCLFFBQUEsQ0FBQWpCLElBQUEsRUFBQUssWUFBQSxNQUFBYSxjQUFBLENBQUFELFFBQUEsQ0FBQWpCLElBQUEsR0FlRDtBQUFBRCxhQUFBLFNBQUFBLENBQUEsU0FBQW1CLGNBQUEsV0FBQUEsY0FBQSxFQUFBbkIsYUFBQSxHQWJaLEtBQU0sQ0FBQW9CLGFBQWEsRUFBQXBCLGFBQUEsR0FBQWMsQ0FBQSxNQUFHLENBQUMsQ0FBQyxFQUV4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBVkFkLGFBQUEsR0FBQWMsQ0FBQSxNQVlBTyxNQUFNLENBQUNDLE9BQU8sQ0FBR0YsYUFBYSJ9